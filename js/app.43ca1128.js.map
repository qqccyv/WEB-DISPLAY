{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/store/meeting.store.js","webpack:///./src/store/user.store.js","webpack:///./src/store/index.js","webpack:///./src/App.vue?12ea","webpack:///./src/App.vue","webpack:///./src/registerServiceWorker.js","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./src/constants/index.js","webpack:///./src/utils/panorts.js","webpack:///./src/utils/panortc.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","installedCssChunks","jsonpScriptSrc","p","exports","module","l","e","promises","cssChunks","Promise","resolve","reject","href","fullhref","existingLinkTags","document","getElementsByTagName","tag","dataHref","getAttribute","rel","existingStyleTags","linkTag","createElement","type","onload","onerror","event","request","target","src","err","Error","code","parentNode","removeChild","head","appendChild","then","installedChunkData","promise","onScriptComplete","script","charset","timeout","nc","setAttribute","error","clearTimeout","chunk","errorType","realSrc","message","name","undefined","setTimeout","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","console","jsonpArray","window","oldJsonpFunction","slice","countdownInterval","getQueryValue","queryName","query","decodeURI","location","split","vars","pair","getInitialState","appId","panoToken","channelId","localStorage","getItem","Constants","Math","random","substring","meetingStatus","videoPorfile","HD720P","meetingEndReason","whiteboardAvailable","isWhiteboardOpen","whiteboardUpdated","remainSeconds","micId","speakerId","cameraId","settingVisible","state","mutations","setAppId","setPanoToken","setWhiteboardAvailable","setSettingVisible","setChannelId","setMeetingStatus","status","setmeetingEndReason","payload","setRemainSeconds","setWhiteboardOpenState","setWhiteboardUpdatedState","wbUpdatedState","setMic","id","setItem","setSpeaker","setCamera","setVideoProfile","videoProfileType","resetMeetingStore","assign","clearInterval","beginCountdown","setInterval","actions","getters","MOMENT_FOR_UNSUBSCRIBE","makeVideoWrapperDom","divEl","style","height","width","createUser","userId","userName","videoDomRef","screenDomRef","subscribed","videoMuted","screenOpen","videoAnnotationOpen","shareAnnotationOpen","audioMuted","isSpeaking","isMostActive","showInMainView","isScreenInMainView","locked","isWbAdmin","lastMomentAsMainView","lastMomentSubscribeVideo","lastMomentSubscribeScreen","Low","createUserMe","userMe","userList","userAudioLevel","updateUserAudioLevel","level","updateUserMe","updateUser","userInfo","user","find","addUser","this","getUserById","removeUser","findIndex","lockUser","log","forEach","u","setWbHost","resetUserStore","trySelectMainView","dispatch","candidateMainViewUser","isScreen","mainViewUser","screenShareAsMainView","setAsMainView","commit","Date","getTime","trySubscribeUserVideo","forceSubscribeUserVideo","subscribeUserScreen","selectMainViewUser","candidates","filter","exceptUserId","userScreen","nextMainViewUser","allUsers","lockedUser","wbAdminUser","mostActiveUser","getUserIndexById","Vue","use","Vuex","Store","userStore","meetingStore","_vm","_h","$createElement","_c","_self","attrs","staticRenderFns","component","register","process","ready","registered","cached","updatefound","updated","offline","originPush","VueRouter","originReplace","replace","onComplete","onAbort","catch","signMode","Meeting","routes","path","redirect","meta","title","router","beforeEach","to","from","next","initPanoRts","mandMobile","ElementUI","config","productionTip","store","render","h","App","$mount","VideoProfileType","ChannelMode","Mode_1v1","Mode_Meeting","localCacheKeyAppId","localCacheKeyToken","localCacheKeyChannelId","localCacheKeyUserName","localCacheKeyUserId","localCacheKeyMuteMicAtStart","localCacheKeyMuteCamAtStart","localCacheKeySelectedCam","localCacheKeySelectedMic","localCacheKeySelectedSpeaker","localCacheKeyVideoProfileType","subscribeVideoQuota","rtcWhiteboard","RtcWhiteboard","on","Events","messageReceived","msg","wbHostId","toString","Message","info","readyStateChanged","userRoleTypeChanged","role","WBRoleType","Attendee","enableCoursewareInteraction","disableCoursewareInteraction","openStateChanged","newShapeReceived","applyForWbAdmin","isAdmin","reqForAdminTimeout","setRoleType","Admin","onRoleChanged","broadcastMessage","off","rtcEngine","PanoRtc","RtcEngine","getMatchingVideoProfile","subSlotFull","usedSubSlot","subscribeUserVideo","raceful","forceMakeOneSubSlot","oldLastMoment","qresult","subscribeVideo","quality","subscribeScreen","userVideoSlots","sortedUserSlots","sort","x","y","innerHTML","unsubscribeVideo","userScreenSlots","unsubscribeScreen","updateCaptureDeviceId","getCams","cameras","item","deviceId","selectCam","getCaptureDeviceList","devices","map","deviceName","label","getRecordDeviceList","getMics","enableOpenVideo","captureDeviceList","enableOpenAudio","recordDeviceList"],"mappings":"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","file":"js/app.43ca1128.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded CSS chunks\n \tvar installedCssChunks = {\n \t\t\"app\": 0\n \t}\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({\"index-page\":\"index-page\"}[chunkId]||chunkId) + \".\" + {\"index-page\":\"3fdcc510\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// mini-css-extract-plugin CSS loading\n \t\tvar cssChunks = {\"index-page\":1};\n \t\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n \t\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n \t\t\tpromises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {\n \t\t\t\tvar href = \"css/\" + ({\"index-page\":\"index-page\"}[chunkId]||chunkId) + \".\" + {\"index-page\":\"51639a05\"}[chunkId] + \".css\";\n \t\t\t\tvar fullhref = __webpack_require__.p + href;\n \t\t\t\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n \t\t\t\tfor(var i = 0; i < existingLinkTags.length; i++) {\n \t\t\t\t\tvar tag = existingLinkTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n \t\t\t\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();\n \t\t\t\t}\n \t\t\t\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n \t\t\t\tfor(var i = 0; i < existingStyleTags.length; i++) {\n \t\t\t\t\tvar tag = existingStyleTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\");\n \t\t\t\t\tif(dataHref === href || dataHref === fullhref) return resolve();\n \t\t\t\t}\n \t\t\t\tvar linkTag = document.createElement(\"link\");\n \t\t\t\tlinkTag.rel = \"stylesheet\";\n \t\t\t\tlinkTag.type = \"text/css\";\n \t\t\t\tlinkTag.onload = resolve;\n \t\t\t\tlinkTag.onerror = function(event) {\n \t\t\t\t\tvar request = event && event.target && event.target.src || fullhref;\n \t\t\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + request + \")\");\n \t\t\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n \t\t\t\t\terr.request = request;\n \t\t\t\t\tdelete installedCssChunks[chunkId]\n \t\t\t\t\tlinkTag.parentNode.removeChild(linkTag)\n \t\t\t\t\treject(err);\n \t\t\t\t};\n \t\t\t\tlinkTag.href = fullhref;\n\n \t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\t\t\thead.appendChild(linkTag);\n \t\t\t}).then(function() {\n \t\t\t\tinstalledCssChunks[chunkId] = 0;\n \t\t\t}));\n \t\t}\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/WEB-DISPLAY/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import * as Constants from '../constants';\n\nlet countdownInterval;\n\nfunction getQueryValue(queryName) {\n  const query = decodeURI(window.location.href.split('?')[1]);\n  const vars = query.split('&');\n  for (let i = 0; i < vars.length; i++) {\n    const pair = vars[i].split('=');\n    if (pair[0] === queryName) {\n      return pair[1];\n    }\n  }\n  return null;\n}\n\nfunction getInitialState() {\n  return {\n    appId: '',\n    panoToken: '',\n    channelId:\n      getQueryValue('channelId') ||\n      localStorage.getItem(Constants.localCacheKeyChannelId) ||\n      `${Math.random()}`.substring(2, 7),\n    meetingStatus: '',\n    videoPorfile:\n      localStorage.getItem(Constants.localCacheKeyVideoProfileType) ||\n      Constants.VideoProfileType.HD720P, // 自己的分辨率\n    meetingEndReason: '',\n    whiteboardAvailable: false, // 白板是否已经连接\n    isWhiteboardOpen: false,\n    whiteboardUpdated: false, // 关闭白板的状态下收到新的内容更新，显示红点提示\n    remainSeconds: -1,\n    micId:\n      localStorage.getItem(Constants.localCacheKeySelectedMic) || 'default', // 麦克风\n    speakerId:\n      localStorage.getItem(Constants.localCacheKeySelectedSpeaker) || 'default', // 扬声器\n    cameraId: localStorage.getItem(Constants.localCacheKeySelectedCam), // 摄像头\n    settingVisible: false\n  };\n}\n\nexport default {\n  state: getInitialState(),\n  mutations: {\n    setAppId(state, appId) {\n      state.appId = appId;\n    },\n    setPanoToken(state, panoToken) {\n      state.panoToken = panoToken;\n    },\n    setWhiteboardAvailable(state, whiteboardAvailable) {\n      state.whiteboardAvailable = whiteboardAvailable;\n    },\n    setSettingVisible(state, settingVisible) {\n      state.settingVisible = settingVisible;\n    },\n    setChannelId(state, channelId) {\n      state.channelId = channelId;\n    },\n    setMeetingStatus(state, status) {\n      state.meetingStatus = status;\n    },\n    setmeetingEndReason(state, payload) {\n      state.meetingEndReason = payload;\n    },\n    setRemainSeconds(state, remainSeconds) {\n      state.remainSeconds = remainSeconds;\n    },\n    setWhiteboardOpenState(state, isWhiteboardOpen) {\n      state.isWhiteboardOpen = isWhiteboardOpen;\n      if (isWhiteboardOpen) {\n        // 如果打开白板，清空白板更新状态\n        state.whiteboardUpdated = false;\n      }\n    },\n    setWhiteboardUpdatedState(state, wbUpdatedState) {\n      state.whiteboardUpdated = wbUpdatedState;\n    },\n    setMic(state, id) {\n      state.micId = id;\n      localStorage.setItem(Constants.localCacheKeySelectedMic, id);\n    },\n    setSpeaker(state, id) {\n      state.speakerId = id;\n      localStorage.setItem(Constants.localCacheKeySelectedSpeaker, id);\n    },\n    setCamera(state, id) {\n      state.cameraId = id;\n      localStorage.setItem(Constants.localCacheKeySelectedCam, id);\n    },\n    setVideoProfile(state, videoProfileType) {\n      state.videoPorfile = videoProfileType;\n      localStorage.setItem(\n        Constants.localCacheKeyVideoProfileType,\n        videoProfileType\n      );\n    },\n    resetMeetingStore(state) {\n      Object.assign(state, getInitialState());\n      clearInterval(countdownInterval);\n    },\n    beginCountdown(state, remainSeconds) {\n      state.remainSeconds = remainSeconds;\n      clearInterval(countdownInterval);\n      countdownInterval = setInterval(() => {\n        state.remainSeconds = state.remainSeconds - 1;\n        if (state.remainSeconds <= 0) {\n          state.meetingStatus = 'countdownover';\n          clearInterval(countdownInterval);\n        }\n      }, 1000);\n    }\n  },\n  actions: {},\n  getters: {\n    appId: state => state.appId,\n    panoToken: state => state.panoToken,\n    micId: state => state.micId,\n    speakerId: state => state.speakerId,\n    cameraId: state => state.cameraId,\n    channelId: state => state.channelId,\n    isWhiteboardOpen: state => state.isWhiteboardOpen,\n    meetingStatus: state => state.meetingStatus,\n    meetingEndReason: state => state.meetingEndReason,\n    remainSeconds: state => state.remainSeconds,\n    videoPorfile: state => state.videoPorfile,\n    whiteboardUpdated: state => state.whiteboardUpdated,\n    whiteboardAvailable: state => state.whiteboardAvailable,\n    settingVisible: state => state.settingVisible\n  }\n};\n","import * as Constants from '../constants';\nimport { find, findIndex } from 'lodash-es';\nimport {\n  subscribeUserScreen,\n  trySubscribeUserVideo,\n  forceSubscribeUserVideo\n} from '../utils/panortc';\n\nconst MOMENT_FOR_UNSUBSCRIBE = 0;\n\nfunction makeVideoWrapperDom(id) {\n  const divEl = document.createElement('div');\n  divEl.id = id;\n  divEl.style.height = '100%';\n  divEl.style.width = '100%';\n  return divEl;\n}\n\nfunction createUser(userId, userName) {\n  return {\n    userId,\n    userName,\n    videoDomRef: makeVideoWrapperDom(`videoDomRef-${userId}-${userName}`),\n    screenDomRef: makeVideoWrapperDom(`screenDomRef-${userId}-${userName}`),\n    subscribed: false,\n    videoMuted: true,\n    screenOpen: false,\n    videoAnnotationOpen: false, // 视频标注是否打开\n    shareAnnotationOpen: false, // 桌面共享标注是否打开\n    audioMuted: true,\n    isSpeaking: false,\n    isMostActive: false,\n    showInMainView: false,\n    isScreenInMainView: false,\n    locked: false,\n    isWbAdmin: false,\n    lastMomentAsMainView: 0,\n    lastMomentSubscribeVideo: MOMENT_FOR_UNSUBSCRIBE,\n    lastMomentSubscribeScreen: MOMENT_FOR_UNSUBSCRIBE,\n    videoProfileType: Constants.VideoProfileType.Low\n  };\n}\n\nfunction createUserMe() {\n  return {\n    ...createUser('1234', 'me'),\n    showInMainView: true,\n    isScreenInMainView: false,\n    videoMuted: true,\n    audioMuted: true,\n    screenOpen: false\n  };\n}\n\nexport default {\n  state: {\n    userMe: createUserMe(),\n    userList: [],\n    userAudioLevel: {}\n  },\n  mutations: {\n    updateUserAudioLevel(state, payload) {\n      state.userAudioLevel = {\n        ...state.userAudioLevel,\n        [payload.userId]: payload.level\n      };\n    },\n    updateUserMe(state, payload) {\n      state.userMe = { ...state.userMe, ...payload };\n    },\n    updateUser(state, userInfo) {\n      const user = find([state.userMe, ...state.userList], {\n        userId: userInfo.userId\n      });\n      Object.assign(user, userInfo);\n    },\n    addUser(state, { userId, userName }) {\n      let user = this.getters.getUserById(userId);\n      if (user) {\n        user.userName = userName;\n      } else {\n        user = createUser(userId, userName);\n        state.userList.push(user);\n      }\n      return user;\n    },\n    removeUser(state, userId) {\n      state.userList.splice(findIndex(state.userList, { userId }), 1);\n    },\n    lockUser(state, userId) {\n      console.log('lockUser', userId);\n      state.userList.forEach(u => {\n        u.locked = u.userId === userId;\n      });\n      state.userMe.locked = state.userMe.userId === userId;\n    },\n    // 设置白板 admin 用户\n    setWbHost(state, userId) {\n      [...state.userList, state.userMe].forEach(u => {\n        u.isWbAdmin = u.userId === userId;\n      });\n    },\n    resetUserStore(state) {\n      state.userMe = createUserMe();\n      state.userList = [];\n    }\n  },\n  actions: {\n    /**\n     * 如果已经有mainview则返回，否则选择一个，如果指定\n     */\n    trySelectMainView({ getters, dispatch }, payload) {\n      const candidateMainViewUser = payload.user;\n      const isScreen = payload.isScreen;\n      const mainViewUser = getters.mainViewUser;\n      if (candidateMainViewUser) {\n        if (\n          mainViewUser &&\n          mainViewUser.userId !== candidateMainViewUser.userId\n        ) {\n          /**\n           * 在已经存在mainviewuser且不是当前candidate的情况下，\n           * 只有mainViewUser的mainview没有视频，而目标video/screen已经开启情况才会抢占\n           */\n          if (\n            ((!mainViewUser.screenOpen && mainViewUser.isScreenInMainView) ||\n              (mainViewUser.videoMuted && !mainViewUser.isScreenInMainView)) &&\n            ((candidateMainViewUser.screenOpen && isScreen) ||\n              (!candidateMainViewUser.videoMuted && !isScreen)) &&\n            !mainViewUser.locked\n          ) {\n            dispatch('setAsMainView', {\n              user: candidateMainViewUser,\n              screenShareAsMainView: !!isScreen\n            });\n          } else if (\n            // 如果目标是screen，那么直接抢占\n            !mainViewUser.locked &&\n            candidateMainViewUser.screenOpen &&\n            isScreen\n          ) {\n            dispatch('setAsMainView', {\n              user: candidateMainViewUser,\n              screenShareAsMainView: !!isScreen\n            });\n          }\n        } else if (\n          mainViewUser &&\n          mainViewUser.userId === candidateMainViewUser.userId\n        ) {\n          if (!mainViewUser.locked && isScreen) {\n            dispatch('setAsMainView', {\n              user: candidateMainViewUser,\n              screenShareAsMainView: !!isScreen\n            });\n          }\n        } else {\n          dispatch('setAsMainView', {\n            user: candidateMainViewUser,\n            screenShareAsMainView: !!isScreen\n          });\n        }\n      } else if (!mainViewUser) {\n        // 不指定candidate 的情况下，只有当前不存在mainviewuser的时候才会选择新的mainviewuser\n        dispatch('selectMainViewUser');\n      }\n    },\n    /**\n     * 将用户设置成大图，设置成大图时会sub该用户的大图，同时取消前一个大图用户的大图订阅小图\n     * @param user 用户\n     * @param screenShareAsMainView 是否将桌面共享设置成大图\n     */\n    setAsMainView(\n      { commit, getters },\n      { user, screenShareAsMainView = false }\n    ) {\n      console.log('设置主视图用户', user, screenShareAsMainView);\n      user.lastMomentAsMainView = new Date().getTime();\n      if (getters.mainViewUser && user.userId !== getters.mainViewUser.userId) {\n        const mainViewUser = getters.getUserById(getters.mainViewUser.userId);\n        commit('updateUser', {\n          userId: mainViewUser.userId,\n          isScreenInMainView: false,\n          showInMainView: false\n        });\n        trySubscribeUserVideo(mainViewUser);\n      }\n      commit('updateUser', {\n        userId: user.userId,\n        showInMainView: true,\n        isScreenInMainView: !!screenShareAsMainView\n      });\n      // 如果不是screen占用mainview，那么必须是抢占式订阅video\n      if (!screenShareAsMainView) {\n        forceSubscribeUserVideo(user);\n      }\n      if (screenShareAsMainView) {\n        subscribeUserScreen(user, true);\n      }\n    },\n    /**\n     * 选择一个用户作为大图用户，选择逻辑为：\n     * 如果有新开共享用户，或者有别的开着共享的用户，有先展示他们的大图，\n     * 如果没有大图用户或者大图用户视频没有开启，将 当前激励用户 > 开启视频的用户 > 用户列表里的第一个用户 >自己 设置成大图\n     * @param screenUser 新开启桌面共享的用户\n     */\n    selectMainViewUser({ state, dispatch, getters }, payload) {\n      const candidates = state.userList.filter(\n        u => u.userId !== payload.exceptUserId\n      );\n      // 如果有新开共享用户，或者有别的开着共享的用户，有先展示他们的大图\n      const userScreen = find(candidates, { screenOpen: true });\n      if (userScreen) {\n        dispatch('setAsMainView', {\n          user: userScreen,\n          screenShareAsMainView: true\n        });\n        return;\n      }\n      // 如果没有大图用户\n      if (\n        !getters.mainViewUser ||\n        getters.mainViewUser.videoMuted ||\n        getters.mainViewUser === getters.userMe ||\n        getters.mainViewUser.userId === payload.exceptUserId\n      ) {\n        const nextMainViewUser =\n          find(candidates, { videoMuted: false }) ||\n          candidates[0] ||\n          state.userMe;\n        dispatch('setAsMainView', { user: nextMainViewUser });\n      }\n    }\n  },\n  getters: {\n    userAudioLevel: state => state.userAudioLevel,\n    allUsers: state => [state.userMe, ...state.userList],\n    userList: state => state.userList,\n    userMe: state => state.userMe,\n    lockedUser: (state, getters) => find(getters.allUsers, { locked: true }),\n    mainViewUser: (state, getters) =>\n      find(getters.allUsers, { showInMainView: true }),\n    wbAdminUser: (state, getters) =>\n      find(getters.allUsers, { isWbAdmin: true }),\n    mostActiveUser: (state, getters) =>\n      find(getters.allUsers, { isMostActive: true }),\n    getUserById: (state, getters) => userId =>\n      find(getters.allUsers, { userId }),\n    getUserIndexById: (state, getters) => userId =>\n      findIndex(getters.allUsers, { userId })\n  }\n};\n","import Vue from 'vue';\nimport Vuex from 'vuex';\nimport meetingStore from './meeting.store';\nimport userStore from './user.store';\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  modules: {\n    userStore,\n    meetingStore\n  }\n});\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('router-view')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=0f7ddb02&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","/* eslint-disable no-console */\n\nimport { register } from 'register-service-worker'\n\nif (process.env.NODE_ENV === 'production') {\n  register(`${process.env.BASE_URL}service-worker.js`, {\n    ready () {\n      console.log(\n        'App is being served from cache by a service worker.\\n' +\n        'For more details, visit https://goo.gl/AFskqB'\n      )\n    },\n    registered () {\n      console.log('Service worker has been registered.')\n    },\n    cached () {\n      console.log('Content has been cached for offline use.')\n    },\n    updatefound () {\n      console.log('New content is downloading.')\n    },\n    updated () {\n      console.log('New content is available; please refresh.')\n    },\n    offline () {\n      console.log('No internet connection found. App is running in offline mode.')\n    },\n    error (error) {\n      console.error('Error during service worker registration:', error)\n    }\n  })\n}\n","import Vue from 'vue'\nimport VueRouter from 'vue-router'\n// 缓存原型上的push函数\nconst originPush = VueRouter.prototype.push\nconst originReplace = VueRouter.prototype.replace\n// 给原型对象上的push指定新函数函数\nVueRouter.prototype.push = function (location, onComplete, onAbort) {\n  // 判断如果没有指定回调函数, 通过call调用源函数并使用catch来处理错误\n  if (onComplete === undefined && onAbort === undefined) {\n    return originPush.call(this, location, onComplete, onAbort).catch(() => { })\n  } else { // 如果有指定任意回调函数, 通过call调用源push函数处理\n    originPush.call(this, location, onComplete, onAbort)\n  }\n}\n// replace同理处理\nVueRouter.prototype.replace = function (location, onComplete, onAbort) {\n  if (onComplete === undefined && onAbort === undefined) {\n    return originReplace.call(this, location, onComplete, onAbort).catch(() => { })\n  } else {\n    originReplace.call(this, location, onComplete, onAbort)\n  }\n}\nconst signMode = () =>\n  import( /* webpackChunkName: \"index-page\" */ '../views/signMode')\nconst Meeting = () =>\n  import( /* webpackChunkName: \"index-page\" */ '../views/Meeting')\n\n\n\nVue.use(VueRouter)\n\nconst routes = [\n  { path: '/', redirect: '/Meeting', meta: { title: '签字面板' } },\n  { path: '/signMode', name: 'signMode', component: signMode, meta: { title: '签字面板' } },\n  {\n    path: '/Meeting',\n    name: 'Meeting',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: Meeting,\n    meta: { title: '白板' }\n  }\n]\n\nconst router = new VueRouter({\n  mode: 'history',\n  routes\n})\nrouter.beforeEach((to, from, next) => {\n  if (to.meta.title) {\n    document.title = to.meta.title\n  }\n  next()\n})\nexport default router","import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport './registerServiceWorker'\r\nimport router from './router'\r\nimport store from './store'\r\nimport mandMobile from 'mand-mobile'\r\nimport 'mand-mobile/lib/mand-mobile.css'\r\n// import initPanoRtc from './utils/panortc';\r\nimport initPanoRts from './utils/panorts';\r\nimport ElementUI from 'element-ui';\r\nimport 'element-ui/lib/theme-chalk/index.css';\r\nimport './assets/css/app.global.css';\r\nimport './assets/css/icons/iconfont.css';\r\n// initPanoRtc();\r\ninitPanoRts();\r\nVue.use(mandMobile)\r\nVue.use(ElementUI);\r\n\r\nVue.config.productionTip = false\r\n\r\nnew Vue({\r\n  router,\r\n  store,\r\n  render: h => h(App)\r\n}).$mount('#app')\r\n","import { Constants } from '@pano.video/panortc';\n\nexport const VideoProfileType = {\n  ...Constants.VideoProfileType\n};\n\nexport const ChannelMode = {\n  Mode_1v1: 0,\n  Mode_Meeting: 1\n};\n\nexport const routes = {\n  login: '/',\n  home: '/meeting'\n};\n\nexport const localCacheKeyAppId = 'pano.democlient.appId';\nexport const localCacheKeyToken = 'pano.democlient.token';\nexport const localCacheKeyChannelId = 'pano.democlient.channelId';\nexport const localCacheKeyUserName = 'pano.democlient.userName';\nexport const localCacheKeyUserId = 'pano.democlient.userId';\nexport const localCacheKeyMuteAtStart = 'pano.democlient.muteatstart';\nexport const localCacheKeyAutoStart = 'pano.democlient.autostart';\nexport const localCacheKeyMuteMicAtStart = 'pano.democlient.mutemicatstart';\nexport const localCacheKeyMuteCamAtStart = 'pano.democlient.mutecamatstart';\nexport const localCacheKeySelectedCam = 'pano.democlient.selectedCam';\nexport const localCacheKeyWbNewShapeIndicator =\n  'pano.democlient.WbNewShapeIndicator';\nexport const localCacheKeySelectedMic = 'pano.democlient.selectedMic';\nexport const localCacheKeySelectedSpeaker = 'pano.democlient.selectedSpeaker';\nexport const localCacheKeyVideoProfileType =\n  'pano.democlient.localCacheKeyVideoProfileType';\nexport const localCacheKeyDefaultWb = 'pano.democlient.defaultWb';\nexport const MOMENT_FOR_UNSUBSCRIBE = 0;\n/**\n * 最多同时订阅 8 个人\n */\nexport const subscribeVideoQuota = 8;\n","import { Message } from 'element-ui';\nimport { RtcWhiteboard, /* RtsService */ Constants } from '@pano.video/panortc';\nimport store from '../store';\n\n// const rtsService = RtsService.getInstance();\nconst rtcWhiteboard = new RtcWhiteboard();\n// window.rtsService = rtsService;\nwindow.rtcWhiteboard = rtcWhiteboard;\n\n/**\n * 初始化pano rts相关逻辑，pano rts包括 Whiteboard, Annotation, RtcMessage, RemoteControl 等\n */\nexport default function initPanoRts() {\n  // rtsService.on(RtsService.Events.failover, data => {\n  //   if (data.state === 'Reconnecting') {\n  //     Message.info('PanoRts 服务连接已断开，正在重连...');\n  //   } else if (data.state === 'Success') {\n  //     console.log('rejoinRtms success');\n  //     Message.success('PanoRts 服务重连成功');\n  //   } else if (data.state === 'Failed') {\n  //     store.commit('setmeetingEndReason', 'RtsService 无法连接到服务器');\n  //     store.commit('setMeetingStatus', 'ended');\n  //   }\n  // });\n\n  rtcWhiteboard.on(RtcWhiteboard.Events.messageReceived, payload => {\n    console.log('got whiteboard message:', payload);\n    const msg = payload.message;\n    if (msg.wbHostId) {\n      if (\n        msg.wbHostId.toString() !== store.getters.userMe.userId &&\n        store.getters.getUserById(msg.wbHostId.toString())\n      ) {\n        Message.info(\n          `${store.getters.getUserById(msg.wbHostId.toString())?.userName\n          } 正在演示`\n        );\n      }\n      store.commit('setWbHost', msg.wbHostId.toString());\n    }\n  });\n\n  rtcWhiteboard.on(RtcWhiteboard.Events.readyStateChanged, payload => {\n    console.log('whiteboard ready state changed,', payload);\n    store.commit('setWhiteboardAvailable', payload.ready);\n  });\n\n  rtcWhiteboard.on(RtcWhiteboard.Events.userRoleTypeChanged, role => {\n    if (role !== Constants.WBRoleType.Attendee) {\n      // 仅admin角色可以通过键盘操作课件\n      rtcWhiteboard.enableCoursewareInteraction();\n    } else {\n      rtcWhiteboard.disableCoursewareInteraction();\n    }\n  });\n\n  // 其他用户初次打开白板，本端收到事件直接打开白板\n  rtcWhiteboard.on(RtcWhiteboard.Events.openStateChanged, () => {\n    store.commit('setWhiteboardOpenState', true);\n  });\n\n  // 如果关闭白板时有新收到的绘制消息提示白板内容有更新\n  rtcWhiteboard.on(RtcWhiteboard.Events.newShapeReceived, () => {\n    if (!store.getters.isWhiteboardOpen) {\n      store.commit('setWhiteboardUpdatedState', true);\n    }\n  });\n\n  // 视频标注开始\n  // rtsService.on(RtsService.Events.videoAnnotationStart, userId => {\n  //   const user = store.getters.getUserById(`${userId}`);\n  //   if (!user) {\n  //     return;\n  //   }\n  //   console.log('videoAnnotationStart', user.userName);\n  //   store.commit('updateUser', { userId, videoAnnotationOpen: true });\n\n  // });\n\n  // 视频标注结束\n  // rtsService.on(RtsService.Events.videoAnnotationStop, userId => {\n  //   console.log('videoAnnotationStop', userId);\n  //   store.commit('updateUser', { userId, videoAnnotationOpen: false });\n  // });\n\n  // 桌面共享标注开始\n  // rtsService.on(RtsService.Events.shareAnnotationStart, userId => {\n  //   const user = store.getters.getUserById(`${userId}`);\n  //   if (!user) {\n  //     return;\n  //   }\n  //   console.log('shareAnnotationStart', user.userName);\n  //   store.commit('updateUser', { userId, shareAnnotationOpen: true });\n  //   if (!store.getters.isRemoteControling) {\n  //     store.commit('setWhiteboardOpenState', false);\n  //     store.dispatch('trySelectMainView', { user });\n  //   }\n  // });\n\n  // 桌面共享标注结束\n  // rtsService.on(RtsService.Events.shareAnnotationStop, userId => {\n  //   console.log('shareAnnotationStop', userId);\n  //   store.commit('updateUser', { userId, shareAnnotationOpen: false });\n  // });\n}\n\n/**\n * 申请 admin 角色（演示权限）\n */\nexport function applyForWbAdmin() {\n  console.log('applyForWbAdmin');\n  return new Promise((resolve, reject) => {\n    if (window.rtcWhiteboard.isAdmin) {\n      resolve();\n      return;\n    }\n    window.rtcWhiteboard.setRoleType(Constants.WBRoleType.Admin);\n    let reqForAdminTimeout;\n    const onRoleChanged = role => {\n      console.log('onRoleChanged', role);\n      clearTimeout(reqForAdminTimeout);\n      if (role === Constants.WBRoleType.Admin) {\n        window.rtcWhiteboard.broadcastMessage({\n          wbHostId: store.getters.userMe.userId\n        });\n        resolve();\n      } else {\n        reject();\n      }\n      window.rtcWhiteboard.off(\n        RtcWhiteboard.Events.userRoleTypeChanged,\n        onRoleChanged\n      );\n    };\n    // 2s 内获取不到权限提示失败\n    reqForAdminTimeout = setTimeout(() => {\n      window.rtcWhiteboard.off(\n        RtcWhiteboard.Events.userRoleTypeChanged,\n        onRoleChanged\n      );\n      reject();\n      console.error('获取演示权限失败，请重试.');\n    }, 2000);\n    window.rtcWhiteboard.on(\n      RtcWhiteboard.Events.userRoleTypeChanged,\n      onRoleChanged\n    );\n  });\n}\n","import PanoRtc from '@pano.video/panortc';\nimport { includes } from 'lodash-es';\nimport store from '../store';\nimport {\n  VideoProfileType,\n  subscribeVideoQuota,\n  MOMENT_FOR_UNSUBSCRIBE\n} from '../constants';\nimport { MessageBox, Message } from 'element-ui';\n\n// 初始化 panortc\n// 全局单例\nconst rtcEngine = new PanoRtc.RtcEngine();\nwindow.rtcEngine = rtcEngine;\n\n/**\n * 获取用户合适的订阅视频分辨率，主视图用户720p，其他180P\n * @param user\n */\nfunction getMatchingVideoProfile(user) {\n  return user.showInMainView && !user.isScreenInMainView\n    ? VideoProfileType.HD720P\n    : VideoProfileType.Low;\n}\n\nfunction subSlotFull() {\n  let usedSubSlot = 0;\n  store.getters.userList.forEach(u => {\n    if (u.lastMomentSubscribeVideo !== 0) {\n      usedSubSlot++;\n    }\n    if (u.lastMomentSubscribeScreen !== 0) {\n      usedSubSlot++;\n    }\n  });\n  return usedSubSlot >= subscribeVideoQuota;\n}\n\n/**\n * 订阅用户视频，如果已经订阅了不会再订阅\n * @param user\n * @param raceful\n */\nfunction subscribeUserVideo(user, raceful = false) {\n  if (!user || user.videoMuted || user.userId === store.getters.userMe.userId)\n    return false;\n  if (\n    getMatchingVideoProfile(user) === user.videoProfileType &&\n    user.videoDomRef.getElementsByTagName('video').length\n  ) {\n    console.log('same profile video already subed, will not sub again.');\n    return true;\n  }\n  if (raceful) {\n    /**\n     * 是否占用了订阅的槽位以发起订阅为准，假设订阅之后的video/screen一定能成功\n     */\n    if (user.lastMomentSubscribeVideo === 0 && subSlotFull()) {\n      forceMakeOneSubSlot();\n    }\n  }\n  const oldLastMoment = user.lastMomentSubscribeVideo;\n  user.lastMomentSubscribeVideo = new Date().getTime();\n  user.videoProfileType = getMatchingVideoProfile(user);\n  console.log(\n    `subscribeVideo of ${user.userName}, profile ${user.videoProfileType}`\n  );\n  const qresult = rtcEngine.subscribeVideo({\n    userId: user.userId,\n    quality: user.videoProfileType,\n    userName: user.userName\n  });\n  console.log('qresult', qresult, {\n    userId: user.userId,\n    quality: user.videoProfileType,\n    userName: user.userName\n  });\n  if (qresult !== 0 && qresult.code !== 'OK') {\n    user.lastMomentSubscribeVideo = oldLastMoment;\n    return false;\n  }\n  return true;\n}\n\n/**\n * 如果video订阅的slot已满，放弃订阅当前user\n * @param user\n * @returns 是否订阅成功\n */\nexport function trySubscribeUserVideo(user) {\n  return subscribeUserVideo(user, false);\n}\n\n/**\n * 如果video订阅的slot已满，选择其中一个取消，然后订阅当前user\n * @param user\n * @returns 是否订阅成功\n */\nexport function forceSubscribeUserVideo(user) {\n  return subscribeUserVideo(user, true);\n}\n\nexport function subscribeUserScreen(user, raceful = false) {\n  if (user.userId === store.getters.userMe.userId) return;\n  if (raceful) {\n    /**\n     * 是否占用了订阅的槽位以发起订阅为准，假设订阅之后的video/screen一定能成功\n     */\n    if (\n      user.lastMomentSubscribeScreen === MOMENT_FOR_UNSUBSCRIBE &&\n      subSlotFull()\n    ) {\n      console.log('subslot is full to subscreen, force make one');\n      forceMakeOneSubSlot();\n    } else {\n      console.log('subslot not full to subscreen');\n    }\n  }\n  const oldLastMoment = user.lastMomentSubscribeScreen;\n  user.lastMomentSubscribeScreen = new Date().getTime();\n  const qresult = rtcEngine.subscribeScreen({\n    userId: user.userId,\n    quality: VideoProfileType.HD720P\n  });\n  console.log(\n    `pvc: subscribescreen result=${qresult} of ${user.userName}@${user.userId}`\n  );\n  if (qresult !== 0 && qresult.code !== 'OK') {\n    user.lastMomentSubscribeScreen = oldLastMoment;\n  }\n}\n\nfunction forceMakeOneSubSlot() {\n  const userVideoSlots = store.getters.userList.filter(u => {\n    return u.lastMomentSubscribeVideo !== MOMENT_FOR_UNSUBSCRIBE;\n  });\n  if (userVideoSlots.length) {\n    const sortedUserSlots = userVideoSlots.sort(\n      (x, y) => x.lastMomentAsMainView - y.lastMomentAsMainView\n    );\n    sortedUserSlots[0].videoDomRef.innerHTML = '';\n    sortedUserSlots[0].lastMomentSubscribeVideo = MOMENT_FOR_UNSUBSCRIBE;\n    rtcEngine.unsubscribeVideo(sortedUserSlots[0].userId);\n    return;\n  }\n\n  const userScreenSlots = store.getters.userList.filter(u => {\n    return u.lastMomentSubscribeScreen !== MOMENT_FOR_UNSUBSCRIBE;\n  });\n  if (userScreenSlots.length) {\n    const sortedUserSlots = userScreenSlots.sort(\n      (x, y) => x.lastMomentAsMainView - y.lastMomentAsMainView\n    );\n    sortedUserSlots[0].screenDomRef.innerHTML = '';\n    sortedUserSlots[0].lastMomentSubscribeScreen = MOMENT_FOR_UNSUBSCRIBE;\n    rtcEngine.unsubscribeScreen(sortedUserSlots[0].userId);\n  }\n}\n\n/**\n * 把 webrtc 返回的 video 标签插入到准备好的dom中\n * @param {HTMLVideoElement} videoTag\n * @param {HTMLElement} wrapper\n */\nfunction insertVideoTagToDom(videoTag, wrapper) {\n  videoTag.setAttribute(\n    'style',\n    'width: 100%; height: 100%; margin: auto; display: block; object-fit: contain;'\n  );\n  wrapper.style.width = '100%';\n  wrapper.style.height = '100%';\n  wrapper.style.display = 'flex';\n  wrapper.style.justifyContent = 'center';\n  wrapper.style.alignItems = 'center';\n  wrapper.innerHTML = '';\n  if (\n    wrapper.firstChild === videoTag &&\n    wrapper.firstChild.srcObject === videoTag.srcObject\n  ) {\n    videoTag.play && videoTag.play();\n  } else {\n    videoTag.play && videoTag.play();\n    wrapper.innerHTML = '';\n    wrapper.appendChild(videoTag);\n  }\n}\n\n/**\n * 初始化pano rtc相关逻辑，pano rtc 包括音、视频和桌面共享功能\n */\nexport default function initPanoRtc() {\n  /**\n   * 接收到别人的视频回调\n   */\n  rtcEngine.on(PanoRtc.RtcEngine.Events.userVideoReceived, data => {\n    console.log('接收到别人的视频回调', data);\n    if (data.data.videoTag) {\n      data.data.videoTag.srcObject = data.data.srcObject;\n      const userInfo = store.getters.getUserById(data.data.userId);\n      if (userInfo) {\n        insertVideoTagToDom(data.data.videoTag, userInfo.videoDomRef);\n      }\n    }\n  });\n\n  // 接收到别人的桌面共享回调\n  rtcEngine.on(PanoRtc.RtcEngine.Events.userScreenReceived, data => {\n    console.log('接收到别人的桌面共享回调', data);\n    if (data.data.videoTag) {\n      data.data.videoTag.srcObject = data.data.srcObject;\n      const userInfo = store.getters.getUserById(data.data.userId);\n      if (userInfo) {\n        insertVideoTagToDom(data.data.videoTag, userInfo.screenDomRef);\n      }\n    }\n  });\n\n  // startVideo 打开自己的视频回调\n  rtcEngine.on(PanoRtc.RtcEngine.Events.getLocalVideo, data => {\n    console.log('startVideo 打开自己的视频回调', data);\n    if (data.data.videoTag) {\n      insertVideoTagToDom(data.data.videoTag, store.getters.userMe.videoDomRef);\n    }\n  });\n\n  // 其他用户入会事件\n  rtcEngine.on(PanoRtc.RtcEngine.Events.userJoin, data => {\n    console.log('其他用户入会事件', data);\n    store.commit('addUser', data.user);\n    store.dispatch(\n      'trySelectMainView',\n      store.getters.getUserById(data.user.userId)\n    );\n    if (store.getters.wbAdminUser === store.getters.userMe) {\n      window.rtcWhiteboard &&\n        window.rtcWhiteboard.sendMessage(data.user.userId, {\n          wbHostId: store.getters.userMe.userId\n        });\n    }\n  });\n\n  // 离会通知\n  rtcEngine.on(PanoRtc.RtcEngine.Events.leaveChannelIndication, result => {\n    console.log('channelLeaveIndication', result);\n    if (store.getters.meetingStatus !== 'countdownover') {\n      // const reasons = [\n      //   'Kicked Out',\n      //   'Force Failover',\n      //   'Meeting Ended',\n      //   'Login Elsewhere'\n      // ];\n      const reasons = [\n        '已被踢出会议',\n        '服务端强制重启会议',\n        '会议结束',\n        '已在其他地方登录'\n      ];\n      store.commit('setmeetingEndReason', reasons[result.reasonCode]);\n      store.commit('setMeetingStatus', 'ended');\n    }\n  });\n\n  // 倒计时\n  rtcEngine.on(PanoRtc.RtcEngine.Events.channelCountDown, data => {\n    console.log(`channelCountDown, remain: ${data.remainsec}`);\n    store.commit('beginCountdown', data.remainsec);\n  });\n\n  // 用户离开通知\n  rtcEngine.on(PanoRtc.RtcEngine.Events.userLeave, data => {\n    const user = store.getters.getUserById(data.userId);\n    if (user) {\n      if (user.showInMainView) {\n        store.dispatch('selectMainViewUser', { exceptUserId: data.userId });\n      }\n      store.commit('removeUser', data.userId);\n    }\n  });\n\n  // video start\n  rtcEngine.on(PanoRtc.RtcEngine.Events.userVideoStart, data => {\n    const { userId } = data;\n    console.log(`onUserVideoStart, userId: ${userId}`);\n    const user = store.getters.getUserById(userId);\n    if (user) {\n      store.commit('updateUser', { userId, videoMuted: false });\n      if (trySubscribeUserVideo(user)) {\n        store.dispatch('trySelectMainView', { user });\n      }\n    }\n  });\n\n  // video stop\n  rtcEngine.on(PanoRtc.RtcEngine.Events.userVideoStop, data => {\n    const { userId } = data;\n    console.log(`onUserVideoStop, userId: ${userId}`);\n    const user = store.getters.getUserById(userId);\n    if (user) {\n      store.commit('updateUser', { userId, videoMuted: true });\n      rtcEngine.unsubscribeVideo({ userId });\n      user.videoDomRef.innerHTML = '';\n    }\n  });\n\n  // audio start\n  rtcEngine.on(PanoRtc.RtcEngine.Events.userAudioStart, data => {\n    const { userId } = data;\n    console.log(`onUserAudioStart, userId: ${userId}`);\n    store.commit('updateUser', { userId, audioMuted: false });\n  });\n\n  // audio stop\n  rtcEngine.on(PanoRtc.RtcEngine.Events.userAudioStop, data => {\n    const { userId } = data;\n    console.log(`onUserAudioStop, userId: ${userId}`);\n    store.commit('updateUser', { userId, audioMuted: true });\n  });\n\n  // audio mute\n  rtcEngine.on(PanoRtc.RtcEngine.Events.userAudioMute, data => {\n    const { userId } = data;\n    console.log(`userAudioMute, userId: ${userId}`);\n    store.commit('updateUser', { userId, audioMuted: true });\n  });\n\n  // audio unmute\n  rtcEngine.on(PanoRtc.RtcEngine.Events.userAudioUnmute, data => {\n    const { userId } = data;\n    console.log(`userAudioUnmute, userId: ${userId}`);\n    store.commit('updateUser', { userId, audioMuted: false });\n  });\n\n  // 别的用户开启桌面共享\n  rtcEngine.on(PanoRtc.RtcEngine.Events.userScreenStart, data => {\n    const { userId } = data;\n    console.log(`userScreenStart, userId: ${userId}`);\n    const user = store.getters.getUserById(`${userId}`);\n    if (user) {\n      store.commit('updateUser', { userId, screenOpen: true });\n      subscribeUserScreen(user, true);\n      store.dispatch('trySelectMainView', {\n        user,\n        isScreen: true\n      });\n      store.commit('setWhiteboardOpenState', false);\n    }\n  });\n\n  // 别的用户停止视频共享\n  rtcEngine.on(PanoRtc.RtcEngine.Events.userScreenStop, data => {\n    const { userId } = data;\n    console.log(`userScreenStop, userId: ${userId}`);\n    const user = store.getters.getUserById(`${userId}`);\n    if (user) {\n      store.commit('updateUser', {\n        userId,\n        screenOpen: false,\n        isScreenInMainView: false,\n        lastMomentSubscribeScreen: MOMENT_FOR_UNSUBSCRIBE\n      });\n      rtcEngine.unsubscribeScreen({ userId });\n      if (user.showInMainView && user.isScreenInMainView) {\n        store.dispatch('trySelectMainView');\n      }\n      user.screenDomRef.innerHTML = '';\n    }\n  });\n\n  // 本地桌面共享结束\n  rtcEngine.on(PanoRtc.RtcEngine.Events.localScreenEnded, () => {\n    console.log('onLocalScreenEnded');\n    store.commit('updateUserMe', { screenOpen: false });\n  });\n\n  // failover 重连事件\n  rtcEngine.on(PanoRtc.RtcEngine.Events.channelFailover, data => {\n    console.log('onChannelFailover', data);\n    switch (data.state) {\n      case 'Reconnecting':\n        store.commit('setMeetingStatus', 'reconnecting');\n        break;\n      case 'Success':\n        store.commit('setMeetingStatus', 'connected');\n        break;\n      case 'Failed':\n        store.commit('setMeetingStatus', 'disconnected');\n        break;\n      default:\n        store.commit('setMeetingStatus', 'ended');\n    }\n  });\n\n  rtcEngine.on(PanoRtc.RtcEngine.Events.activeSpeakerListUpdate, data => {\n    store.getters.allUsers.forEach(user => {\n      store.commit('updateUser', {\n        userId: user.userId,\n        isSpeaking: includes(data.list, user.userId)\n      });\n    });\n  });\n\n  rtcEngine.on(PanoRtc.RtcEngine.Events.audioDeviceChange, () => {\n    // 如果当前使用的设备被拔出，那么选择默认的设备\n    if (store.getters.micId !== 'default') {\n      rtcEngine.getMics(devices => {\n        if (!devices.find(item => item.deviceId === store.getters.micId)) {\n          store.commit('setMic', 'default');\n          rtcEngine.selectMic('default');\n        }\n      });\n    }\n    if (store.getters.speakerId !== 'default') {\n      rtcEngine.getSpeakers(devices => {\n        if (!devices.find(item => item.deviceId === store.getters.speakerId)) {\n          store.commit('setSpeaker', 'default');\n          rtcEngine.selectSpeaker('default');\n        }\n      });\n    }\n  });\n\n  rtcEngine.on(PanoRtc.RtcEngine.Events.videoDeviceChange, () => {\n    // 如果当前使用的设备被拔出，那么选择默认的设备\n    rtcEngine.getCams(cameras => {\n      if (!cameras.find(item => item.deviceId === store.getters.cameraId)) {\n        if (cameras[0]) {\n          // rtcEngine.stopPreview();\n          store.commit('setCamera', cameras[0].deviceId);\n          rtcEngine.selectCam(cameras[0].deviceId);\n        }\n      }\n    });\n  });\n\n  rtcEngine.on(PanoRtc.RtcEngine.Events.getVideoMediaFailed, data => {\n    showStartMediaFailureMessage('video', data);\n    store.commit('updateUserMe', { videoMuted: true });\n  });\n\n  rtcEngine.on(PanoRtc.RtcEngine.Events.getAudioMediaFailed, data => {\n    showStartMediaFailureMessage('audio', data);\n    store.commit('updateUserMe', { audioMuted: true });\n  });\n\n  rtcEngine.on(PanoRtc.RtcEngine.Events.getScreenMediaFailed, data => {\n    showStartMediaFailureMessage('screen', data);\n    store.commit('updateUserMe', { screenOpen: false });\n  });\n\n  const onLocalScreenEnd = () => {\n    console.log('本地桌面共享结束');\n    store.commit('updateUser', {\n      userId: store.getters.userMe.userId,\n      screenOpen: false\n    });\n  };\n\n  // 本地共享桌面结束\n  rtcEngine.on(PanoRtc.RtcEngine.Events.getScreenMediaFailed, onLocalScreenEnd);\n  rtcEngine.on(PanoRtc.RtcEngine.Events.localScreenEnded, onLocalScreenEnd);\n\n  // 没有默认选择的 camera\n  // rtcEngine.getCams(cameras => {\n  //   if (!store.getters.cameraId) {\n  //     store.commit('setCamera', get(cameras, '0.deviceId'));\n  //   }\n  //   rtcEngine.selectCam(store.getters.cameraId);\n  // });\n  // rtcEngine.selectCam(store.getters.cameraId);\n  // rtcEngine.selectMic(store.getters.micId);\n  // rtcEngine.selectSpeaker(store.getters.speakerId);\n\n  // 设置用户音量回调\n  let noAudioInputCount = 0;\n  const intervalMs = 200;\n  // 自己的音量回调\n  rtcEngine.setRecordingAudioIndication(record => {\n    //  record: { level: number, userId: string, active: boolean }\n    if (record.active && record.level < 0.00001) {\n      noAudioInputCount++;\n    } else {\n      noAudioInputCount = 0;\n    }\n    // 3s 内一直检测到音频输入音量很低即弹框提示用户麦克风异常\n    if (noAudioInputCount === Math.floor(3000 / intervalMs)) {\n      MessageBox.alert(\n        '检测到您的音频输入音量很低，可能影响通话质量，请检查您的麦克风是否正常',\n        '提示'\n      );\n    }\n    store.commit('updateUserAudioLevel', {\n      userId: record.userId,\n      level: record.level\n    });\n  }, intervalMs);\n  // 其他用户的音量回调\n  rtcEngine.setUserAudioIndication(records => {\n    // records: { level: number, userId: string, active: boolean }[]\n    records.forEach(r => {\n      store.commit('updateUserAudioLevel', {\n        userId: r.userId,\n        level: r.level\n      });\n    });\n  }, intervalMs);\n}\n\nexport async function updateCaptureDeviceId() {\n  if (!store.getters.cameraId) {\n    return;\n  }\n  await rtcEngine.getCams(cameras => {\n    if (!cameras.find(item => item.deviceId === store.getters.cameraId)) {\n      if (cameras[0]) {\n        store.commit('setCamera', cameras[0].deviceId);\n      }\n    }\n    if (store.getters.cameraId) {\n      rtcEngine.selectCam(store.getters.cameraId);\n    }\n  });\n}\n\nasync function getCaptureDeviceList() {\n  return new Promise((resolve, reject) => {\n    rtcEngine.getCams(\n      devices =>\n        resolve(\n          devices.map(d => ({ deviceName: d.label, deviceId: d.deviceId }))\n        ),\n      error => {\n        console.log('getCaptureDeviceList failed', error);\n        reject(error);\n      }\n    );\n  });\n}\n\nasync function getRecordDeviceList() {\n  return new Promise((resolve, reject) => {\n    window.rtcEngine.getMics(\n      devices =>\n        resolve(\n          devices.map(d => ({ deviceName: d.label, deviceId: d.deviceId }))\n        ),\n      error => {\n        console.log('getRecordDeviceList failed', error);\n        reject(error);\n      }\n    );\n  });\n}\n\nexport async function enableOpenVideo() {\n  const captureDeviceList = await getCaptureDeviceList();\n  return captureDeviceList.length > 0;\n}\n\nexport async function enableOpenAudio() {\n  const recordDeviceList = await getRecordDeviceList();\n  return recordDeviceList.length > 0;\n}\n\nfunction showStartMediaFailureMessage(type, data) {\n  let device = '麦克风';\n  if (type !== 'audio') {\n    device = type === 'video' ? '摄像头' : '共享屏幕';\n  }\n  if (data.errorName === 'NotAllowedError') {\n    Message.info(`没有权限使用${device}`);\n  } else if (data.errorName === 'NotFoundError') {\n    Message.info(`没有检测到${device}`);\n  } else if (data.errorName === 'NotReadableError') {\n    Message.info(`${device}被占用，无法访问`);\n  } else if (type === 'audio' || type === 'video') {\n    Message.info(`开启${device}失败`);\n  }\n}\n"],"sourceRoot":""}